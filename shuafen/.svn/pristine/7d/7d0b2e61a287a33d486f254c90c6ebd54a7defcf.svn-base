<?php

/**
 * 支付宝
 */
function alipay($order)
{

	require_once("./alipay/alipay.config.php");
	require_once("./alipay/lib/alipay_submit.class.php");

	/**************************请求参数**************************/
	//立言id,用户id
	//商户订单号，商户网站订单系统中唯一订单号，必填
	$out_trade_no = $order['trade_no'];
	//订单名称，必填
	$subject = $order['subject'];
	//付款金额，必填
	$total_fee = $order['price'];
	//商品描述，可空
	$body = $order['body'];

	$userid = $order['userId'];
	//回调通知地址

		$notify_url = 'http://'.$_SERVER['HTTP_HOST'].__MODULE__.'/Callback/alipay_notify_urls/';
		//回调地址
		$return_url = 'http://'.$_SERVER['HTTP_HOST'].__MODULE__.'/Me/first/';


	

	/************************************************************/

	//构造要请求的参数数组，无需改动
	$parameter = array(
			"service"       => $alipay_config['service'],
			"partner"       => $alipay_config['partner'],
			"seller_id"  => $alipay_config['seller_id'],
			"payment_type"	=> $alipay_config['payment_type'],
			"notify_url"	=> $notify_url,
			"return_url"	=> $return_url,
			"anti_phishing_key"=>$alipay_config['anti_phishing_key'],
			"exter_invoke_ip"=>$alipay_config['exter_invoke_ip'],
			"out_trade_no"	=> $out_trade_no,
			"subject"	=> $subject,
			"total_fee"	=> $total_fee,
			"body"	=> $body,
			"_input_charset"	=> trim(strtolower($alipay_config['input_charset']))
			//其他业务参数根据在线开发文档，添加参数.文档地址:https://doc.open.alipay.com/doc2/detail.htm?spm=a219a.7629140.0.0.kiX33I&treeId=62&articleId=103740&docType=1
			//如"参数名"=>"参数值"

	);

	//建立请求
	$alipaySubmit = new AlipaySubmit($alipay_config);
	$html_text = $alipaySubmit->buildRequestForm($parameter,"get","确认");
	echo $html_text;
}

function alipaywap($order){
	header("Content-type: text/html; charset=utf-8");
	require_once './alipaywap/aop/request/AlipayTradePagePayRequest.php';
	require_once './alipaywap/aop/request/AlipayTradeWapPayRequest.php';
	require_once './alipaywap/aop/AopClient.php';
	require_once './alipaywap/wappay/service/AlipayTradeService.php';
	require_once './alipaywap/wappay/buildermodel/AlipayTradeWapPayContentBuilder.php';
	require './alipaywap/config.php';
	//商户订单号，商户网站订单系统中唯一订单号，必填
	$out_trade_no = $order['WIDout_trade_no'];

	//订单名称，必填
	$subject = $order['WIDsubject'];

	//付款金额，必填
	$total_amount = $order['WIDtotal_amount'];

	//商品描述，可空
	$body = $order['WIDbody'];
	//用户id
    $userid = $order['userId'];
	//超时时间
	$timeout_express="1m";
  

	$payRequestBuilder = new AlipayTradeWapPayContentBuilder();
	$payRequestBuilder->setBody($body);
	$payRequestBuilder->setSubject($subject);
	$payRequestBuilder->setOutTradeNo($out_trade_no);
	$payRequestBuilder->setTotalAmount($total_amount);
	$payRequestBuilder->setTimeExpress($timeout_express);

	$config['notify_url'] = 'http://'.$_SERVER['HTTP_HOST'].__MODULE__.'/Callback/alipay_wap';
	$config['return_url'] = 'http://'.$_SERVER['HTTP_HOST'].__MODULE__.'/Order/orderlist';
	$payResponse = new AlipayTradeService($config);
	$result=$payResponse->wapPay($payRequestBuilder,$config['return_url'],$config['notify_url']);

	return ;
}


/**
 * 支付宝回调地址引入文件
 */
function alipay_notify_url(){
	require_once("./alipay/alipay.config.php");
	require_once("./alipay/lib/alipay_notify.class.php");

	//计算得出通知验证结果
	$alipayNotify = new AlipayNotify($alipay_config);
	$verify_result = $alipayNotify->verifyNotify();
	return $verify_result;
}


/**
 * 支付宝手机回调地址引入文件
 */
function malipay_notify_url(){
	require_once("./alipaywap/config.php");
	require_once './alipaywap/aop/request/AlipayTradePagePayRequest.php';
	require_once './alipaywap/aop/request/AlipayTradeWapPayRequest.php';
	require_once './alipaywap/aop/AopClient.php';
	require_once("./alipaywap/wappay/service/AlipayTradeService.php");
	
	//计算得出通知验证结果
	$arr=$_POST;
	$alipaySevice = new AlipayTradeService($config);
	$alipaySevice->writeLog(var_export($_POST,true));
	$result = $alipaySevice->check($arr);
	return $result;
}

/**
 * 微信支付
 */
function wxpay(){
	include_once( './wxpay/lib/WxPay.Api.php' );
	include_once( './wxpay/WxPay.NativePay.php');
}


/**
 * 微信支付回调地址
 */
function wxpay_native_notify_url(){
	include_once( './wxpay/native_notify.php' );
}


/**
 * 微信支付回调地址
 */
function wxpay_notify_url(){
	include_once( './wxpay/notify.php' );
}


/**
 * qq登陆
 **/
function qqlogin(){
	include_once( './qqlogin/API/qqConnectAPI.php' );
	$qc = new QC();
	$qc->qq_login();
}

/**
 * qq登陆callback
 **/
function qqlogincallback(){
	include_once( './qqlogin/API/qqConnectAPI.php');
	$qc = new QC();
	$access_token = $qc->qq_callback();
	$openid = $qc->get_openid();
	$qc = new QC($access_token,$openid);
	$user = $qc->get_user_info();
	$user['openid'] = $openid;
	return $user;
}

/**
 * 支付宝网站log
 * @param unknown $content
 */
function alipaylog($content){
	require_once './log/log.php';
	//初始化日志
	$logHandler= new CLogFileHandler("./log/alipay/".date('Y-m-d').'.log');
	$log = Logx::Init($logHandler, 15);
	Logx::DEBUG($content);
}



//生成订单号
	function createNumber(){
		$order = createOrderNos();
		$res1 = M('buyorder')->where(array('order_number'=>$order))->find();
		$res2 = M('buyorder')->where(array('out_trade_no'=>$order))->find();
		$res3 = M('buyorder')->where(array('wx_out_trade_no'=>$order))->find();
		if(!$res1 && !$res2 && !$res3){
			return $order;
		}else{
			createNumber();
		}
	}
	


  function createOrderNos(){
        $id = date('Ymd', time()) . str_pad(rand('1', '99999'), 5, '0', STR_PAD_LEFT);
        return $id;
    }

